//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Auctions_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Item), "Auctions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Auction), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Auctions_Realms", "Realms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Realm), "Auctions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Auction), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Characters_Classes", "Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Class), "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Characters_Races", "Races", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Race), "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Characters_Realms", "Realms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Realm), "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Items_Companions", "Companions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WoWModel.Companion), "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Item), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Items_Recipes", "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WoWModel.Recipe), "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Item), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Item), "Reagents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Reagent), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Recipes_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WoWModel.Item), "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Recipe), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Recipes", "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Recipe), "Reagents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Reagent), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "FK_Recipes_Tradeskills", "Tradeskills", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WoWModel.Tradeskill), "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Recipe), true)]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "CharacterCompanions", "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), "Companions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Companion))]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "CharacterRecipes", "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Recipe))]
[assembly: EdmRelationshipAttribute("WoWModel.WoWDbModel", "CharacterTradeskills", "Character", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Character), "Tradeskill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WoWModel.Tradeskill))]

#endregion

namespace WoWModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WoWEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WoWEntities object using the connection string found in the 'WoWEntities' section of the application configuration file.
        /// </summary>
        public WoWEntities() : base("name=WoWEntities", "WoWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WoWEntities object.
        /// </summary>
        public WoWEntities(string connectionString) : base(connectionString, "WoWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WoWEntities object.
        /// </summary>
        public WoWEntities(EntityConnection connection) : base(connection, "WoWEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Auction> Auctions
        {
            get
            {
                if ((_Auctions == null))
                {
                    _Auctions = base.CreateObjectSet<Auction>("Auctions");
                }
                return _Auctions;
            }
        }
        private ObjectSet<Auction> _Auctions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Character> Characters
        {
            get
            {
                if ((_Characters == null))
                {
                    _Characters = base.CreateObjectSet<Character>("Characters");
                }
                return _Characters;
            }
        }
        private ObjectSet<Character> _Characters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Companion> Companions
        {
            get
            {
                if ((_Companions == null))
                {
                    _Companions = base.CreateObjectSet<Companion>("Companions");
                }
                return _Companions;
            }
        }
        private ObjectSet<Companion> _Companions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Race> Races
        {
            get
            {
                if ((_Races == null))
                {
                    _Races = base.CreateObjectSet<Race>("Races");
                }
                return _Races;
            }
        }
        private ObjectSet<Race> _Races;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reagent> Reagents
        {
            get
            {
                if ((_Reagents == null))
                {
                    _Reagents = base.CreateObjectSet<Reagent>("Reagents");
                }
                return _Reagents;
            }
        }
        private ObjectSet<Reagent> _Reagents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Realm> Realms
        {
            get
            {
                if ((_Realms == null))
                {
                    _Realms = base.CreateObjectSet<Realm>("Realms");
                }
                return _Realms;
            }
        }
        private ObjectSet<Realm> _Realms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Recipe> Recipes
        {
            get
            {
                if ((_Recipes == null))
                {
                    _Recipes = base.CreateObjectSet<Recipe>("Recipes");
                }
                return _Recipes;
            }
        }
        private ObjectSet<Recipe> _Recipes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tradeskill> Tradeskills
        {
            get
            {
                if ((_Tradeskills == null))
                {
                    _Tradeskills = base.CreateObjectSet<Tradeskill>("Tradeskills");
                }
                return _Tradeskills;
            }
        }
        private ObjectSet<Tradeskill> _Tradeskills;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Auctions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuctions(Auction auction)
        {
            base.AddObject("Auctions", auction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Characters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacters(Character character)
        {
            base.AddObject("Characters", character);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanions(Companion companion)
        {
            base.AddObject("Companions", companion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaces(Race race)
        {
            base.AddObject("Races", race);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reagents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReagents(Reagent reagent)
        {
            base.AddObject("Reagents", reagent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Realms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealms(Realm realm)
        {
            base.AddObject("Realms", realm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Recipes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecipes(Recipe recipe)
        {
            base.AddObject("Recipes", recipe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tradeskills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradeskills(Tradeskill tradeskill)
        {
            base.AddObject("Tradeskills", tradeskill);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Auction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Auction object.
        /// </summary>
        /// <param name="realmId">Initial value of the RealmId property.</param>
        /// <param name="faction">Initial value of the Faction property.</param>
        /// <param name="auctionId">Initial value of the AuctionId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="timeLeft">Initial value of the TimeLeft property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static Auction CreateAuction(global::System.Int32 realmId, global::System.String faction, global::System.Int64 auctionId, global::System.Int32 itemId, global::System.String owner, global::System.Int64 quantity, global::System.String timeLeft, global::System.Int64 lastModified)
        {
            Auction auction = new Auction();
            auction.RealmId = realmId;
            auction.Faction = faction;
            auction.AuctionId = auctionId;
            auction.ItemId = itemId;
            auction.Owner = owner;
            auction.Quantity = quantity;
            auction.TimeLeft = timeLeft;
            auction.LastModified = lastModified;
            return auction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealmId
        {
            get
            {
                return _RealmId;
            }
            set
            {
                if (_RealmId != value)
                {
                    OnRealmIdChanging(value);
                    ReportPropertyChanging("RealmId");
                    _RealmId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealmId");
                    OnRealmIdChanged();
                }
            }
        }
        private global::System.Int32 _RealmId;
        partial void OnRealmIdChanging(global::System.Int32 value);
        partial void OnRealmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Faction
        {
            get
            {
                return _Faction;
            }
            set
            {
                OnFactionChanging(value);
                ReportPropertyChanging("Faction");
                _Faction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Faction");
                OnFactionChanged();
            }
        }
        private global::System.String _Faction;
        partial void OnFactionChanging(global::System.String value);
        partial void OnFactionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuctionId
        {
            get
            {
                return _AuctionId;
            }
            set
            {
                if (_AuctionId != value)
                {
                    OnAuctionIdChanging(value);
                    ReportPropertyChanging("AuctionId");
                    _AuctionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuctionId");
                    OnAuctionIdChanged();
                }
            }
        }
        private global::System.Int64 _AuctionId;
        partial void OnAuctionIdChanging(global::System.Int64 value);
        partial void OnAuctionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                OnBidChanging(value);
                ReportPropertyChanging("Bid");
                _Bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bid");
                OnBidChanged();
            }
        }
        private Nullable<global::System.Int64> _Bid;
        partial void OnBidChanging(Nullable<global::System.Int64> value);
        partial void OnBidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Buyout
        {
            get
            {
                return _Buyout;
            }
            set
            {
                OnBuyoutChanging(value);
                ReportPropertyChanging("Buyout");
                _Buyout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Buyout");
                OnBuyoutChanged();
            }
        }
        private Nullable<global::System.Int64> _Buyout;
        partial void OnBuyoutChanging(Nullable<global::System.Int64> value);
        partial void OnBuyoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int64 _Quantity;
        partial void OnQuantityChanging(global::System.Int64 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TimeLeft
        {
            get
            {
                return _TimeLeft;
            }
            set
            {
                OnTimeLeftChanging(value);
                ReportPropertyChanging("TimeLeft");
                _TimeLeft = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TimeLeft");
                OnTimeLeftChanged();
            }
        }
        private global::System.String _TimeLeft;
        partial void OnTimeLeftChanging(global::System.String value);
        partial void OnTimeLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.Int64 _LastModified;
        partial void OnLastModifiedChanging(global::System.Int64 value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Auctions_Items", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Auctions_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Auctions_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Auctions_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("WoWModel.WoWDbModel.FK_Auctions_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Auctions_Realms", "Realms")]
        public Realm Realm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Realms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Realms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Realm> RealmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Realms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Realms", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Character")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Character : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Character object.
        /// </summary>
        /// <param name="characterId">Initial value of the CharacterId property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="realmId">Initial value of the RealmId property.</param>
        /// <param name="raceId">Initial value of the RaceId property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="achievementPoints">Initial value of the AchievementPoints property.</param>
        /// <param name="thumbnail">Initial value of the Thumbnail property.</param>
        public static Character CreateCharacter(global::System.Int32 characterId, global::System.Int64 lastModified, global::System.String name, global::System.Int32 realmId, global::System.Int32 raceId, global::System.Int32 classId, global::System.Int32 gender, global::System.Int32 level, global::System.Int32 achievementPoints, global::System.String thumbnail)
        {
            Character character = new Character();
            character.CharacterId = characterId;
            character.LastModified = lastModified;
            character.Name = name;
            character.RealmId = realmId;
            character.RaceId = raceId;
            character.ClassId = classId;
            character.Gender = gender;
            character.Level = level;
            character.AchievementPoints = achievementPoints;
            character.Thumbnail = thumbnail;
            return character;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterId
        {
            get
            {
                return _CharacterId;
            }
            set
            {
                if (_CharacterId != value)
                {
                    OnCharacterIdChanging(value);
                    ReportPropertyChanging("CharacterId");
                    _CharacterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterId");
                    OnCharacterIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterId;
        partial void OnCharacterIdChanging(global::System.Int32 value);
        partial void OnCharacterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.Int64 _LastModified;
        partial void OnLastModifiedChanging(global::System.Int64 value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealmId
        {
            get
            {
                return _RealmId;
            }
            set
            {
                OnRealmIdChanging(value);
                ReportPropertyChanging("RealmId");
                _RealmId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealmId");
                OnRealmIdChanged();
            }
        }
        private global::System.Int32 _RealmId;
        partial void OnRealmIdChanging(global::System.Int32 value);
        partial void OnRealmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceId
        {
            get
            {
                return _RaceId;
            }
            set
            {
                OnRaceIdChanging(value);
                ReportPropertyChanging("RaceId");
                _RaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceId");
                OnRaceIdChanged();
            }
        }
        private global::System.Int32 _RaceId;
        partial void OnRaceIdChanging(global::System.Int32 value);
        partial void OnRaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int32 _Gender;
        partial void OnGenderChanging(global::System.Int32 value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievementPoints
        {
            get
            {
                return _AchievementPoints;
            }
            set
            {
                OnAchievementPointsChanging(value);
                ReportPropertyChanging("AchievementPoints");
                _AchievementPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AchievementPoints");
                OnAchievementPointsChanged();
            }
        }
        private global::System.Int32 _AchievementPoints;
        partial void OnAchievementPointsChanging(global::System.Int32 value);
        partial void OnAchievementPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Thumbnail
        {
            get
            {
                return _Thumbnail;
            }
            set
            {
                OnThumbnailChanging(value);
                ReportPropertyChanging("Thumbnail");
                _Thumbnail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thumbnail");
                OnThumbnailChanged();
            }
        }
        private global::System.String _Thumbnail;
        partial void OnThumbnailChanging(global::System.String value);
        partial void OnThumbnailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Classes", "Classes")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("WoWModel.WoWDbModel.FK_Characters_Classes", "Classes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("WoWModel.WoWDbModel.FK_Characters_Classes", "Classes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("WoWModel.WoWDbModel.FK_Characters_Classes", "Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("WoWModel.WoWDbModel.FK_Characters_Classes", "Classes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Races", "Races")]
        public Race Race
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("WoWModel.WoWDbModel.FK_Characters_Races", "Races").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("WoWModel.WoWDbModel.FK_Characters_Races", "Races").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Race> RaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("WoWModel.WoWDbModel.FK_Characters_Races", "Races");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Race>("WoWModel.WoWDbModel.FK_Characters_Races", "Races", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Realms", "Realms")]
        public Realm Realm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Characters_Realms", "Realms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Characters_Realms", "Realms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Realm> RealmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Characters_Realms", "Realms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Realm>("WoWModel.WoWDbModel.FK_Characters_Realms", "Realms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterCompanions", "Companions")]
        public EntityCollection<Companion> Companions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Companion>("WoWModel.WoWDbModel.CharacterCompanions", "Companions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Companion>("WoWModel.WoWDbModel.CharacterCompanions", "Companions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterRecipes", "Recipes")]
        public EntityCollection<Recipe> Recipes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recipe>("WoWModel.WoWDbModel.CharacterRecipes", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recipe>("WoWModel.WoWDbModel.CharacterRecipes", "Recipes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterTradeskills", "Tradeskill")]
        public EntityCollection<Tradeskill> Tradeskills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tradeskill>("WoWModel.WoWDbModel.CharacterTradeskills", "Tradeskill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tradeskill>("WoWModel.WoWDbModel.CharacterTradeskills", "Tradeskill", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        /// <param name="r">Initial value of the R property.</param>
        /// <param name="g">Initial value of the G property.</param>
        /// <param name="b">Initial value of the B property.</param>
        public static Class CreateClass(global::System.Int32 classId, global::System.String name, global::System.String icon, global::System.Byte r, global::System.Byte g, global::System.Byte b)
        {
            Class @class = new Class();
            @class.ClassId = classId;
            @class.Name = name;
            @class.Icon = icon;
            @class.R = r;
            @class.G = g;
            @class.B = b;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                if (_ClassId != value)
                {
                    OnClassIdChanging(value);
                    ReportPropertyChanging("ClassId");
                    _ClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassId");
                    OnClassIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte R
        {
            get
            {
                return _R;
            }
            set
            {
                OnRChanging(value);
                ReportPropertyChanging("R");
                _R = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("R");
                OnRChanged();
            }
        }
        private global::System.Byte _R;
        partial void OnRChanging(global::System.Byte value);
        partial void OnRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte G
        {
            get
            {
                return _G;
            }
            set
            {
                OnGChanging(value);
                ReportPropertyChanging("G");
                _G = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("G");
                OnGChanged();
            }
        }
        private global::System.Byte _G;
        partial void OnGChanging(global::System.Byte value);
        partial void OnGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte B
        {
            get
            {
                return _B;
            }
            set
            {
                OnBChanging(value);
                ReportPropertyChanging("B");
                _B = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("B");
                OnBChanged();
            }
        }
        private global::System.Byte _B;
        partial void OnBChanging(global::System.Byte value);
        partial void OnBChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Classes", "Characters")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Classes", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Classes", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Companion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Companion object.
        /// </summary>
        /// <param name="companionId">Initial value of the CompanionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Companion CreateCompanion(global::System.Int32 companionId, global::System.String name)
        {
            Companion companion = new Companion();
            companion.CompanionId = companionId;
            companion.Name = name;
            return companion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanionId
        {
            get
            {
                return _CompanionId;
            }
            set
            {
                if (_CompanionId != value)
                {
                    OnCompanionIdChanging(value);
                    ReportPropertyChanging("CompanionId");
                    _CompanionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanionId");
                    OnCompanionIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanionId;
        partial void OnCompanionIdChanging(global::System.Int32 value);
        partial void OnCompanionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Items_Companions", "Items")]
        public EntityCollection<Item> TaughtBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("WoWModel.WoWDbModel.FK_Items_Companions", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("WoWModel.WoWDbModel.FK_Items_Companions", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterCompanions", "Characters")]
        public EntityCollection<Character> KnownBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterCompanions", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterCompanions", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Item CreateItem(global::System.Int32 itemId, global::System.String name)
        {
            Item item = new Item();
            item.ItemId = itemId;
            item.Name = name;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JSON
        {
            get
            {
                return _JSON;
            }
            set
            {
                OnJSONChanging(value);
                ReportPropertyChanging("JSON");
                _JSON = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JSON");
                OnJSONChanged();
            }
        }
        private global::System.String _JSON;
        partial void OnJSONChanging(global::System.String value);
        partial void OnJSONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JSON_zhTW
        {
            get
            {
                return _JSON_zhTW;
            }
            set
            {
                OnJSON_zhTWChanging(value);
                ReportPropertyChanging("JSON_zhTW");
                _JSON_zhTW = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JSON_zhTW");
                OnJSON_zhTWChanged();
            }
        }
        private global::System.String _JSON_zhTW;
        partial void OnJSON_zhTWChanging(global::System.String value);
        partial void OnJSON_zhTWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecipeId
        {
            get
            {
                return _RecipeId;
            }
            set
            {
                OnRecipeIdChanging(value);
                ReportPropertyChanging("RecipeId");
                _RecipeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecipeId");
                OnRecipeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RecipeId;
        partial void OnRecipeIdChanging(Nullable<global::System.Int32> value);
        partial void OnRecipeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanionId
        {
            get
            {
                return _CompanionId;
            }
            set
            {
                OnCompanionIdChanging(value);
                ReportPropertyChanging("CompanionId");
                _CompanionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanionId");
                OnCompanionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanionId;
        partial void OnCompanionIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ServerwideAverage
        {
            get
            {
                return _ServerwideAverage;
            }
            set
            {
                OnServerwideAverageChanging(value);
                ReportPropertyChanging("ServerwideAverage");
                _ServerwideAverage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerwideAverage");
                OnServerwideAverageChanged();
            }
        }
        private Nullable<global::System.Int64> _ServerwideAverage;
        partial void OnServerwideAverageChanging(Nullable<global::System.Int64> value);
        partial void OnServerwideAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quality
        {
            get
            {
                return _Quality;
            }
            set
            {
                OnQualityChanging(value);
                ReportPropertyChanging("Quality");
                _Quality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quality");
                OnQualityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quality;
        partial void OnQualityChanging(Nullable<global::System.Int32> value);
        partial void OnQualityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BindOnPickup
        {
            get
            {
                return _BindOnPickup;
            }
            set
            {
                OnBindOnPickupChanging(value);
                ReportPropertyChanging("BindOnPickup");
                _BindOnPickup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BindOnPickup");
                OnBindOnPickupChanged();
            }
        }
        private Nullable<global::System.Int32> _BindOnPickup;
        partial void OnBindOnPickupChanging(Nullable<global::System.Int32> value);
        partial void OnBindOnPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceType
        {
            get
            {
                return _SourceType;
            }
            set
            {
                OnSourceTypeChanging(value);
                ReportPropertyChanging("SourceType");
                _SourceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceType");
                OnSourceTypeChanged();
            }
        }
        private global::System.String _SourceType;
        partial void OnSourceTypeChanging(global::System.String value);
        partial void OnSourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Auctions_Items", "Auctions")]
        public EntityCollection<Auction> Auctions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auction>("WoWModel.WoWDbModel.FK_Auctions_Items", "Auctions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auction>("WoWModel.WoWDbModel.FK_Auctions_Items", "Auctions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Items_Companions", "Companions")]
        public Companion CompanionTaught
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companion>("WoWModel.WoWDbModel.FK_Items_Companions", "Companions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companion>("WoWModel.WoWDbModel.FK_Items_Companions", "Companions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companion> CompanionTaughtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companion>("WoWModel.WoWDbModel.FK_Items_Companions", "Companions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companion>("WoWModel.WoWDbModel.FK_Items_Companions", "Companions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Items_Recipes", "Recipes")]
        public Recipe RecipeTaught
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_Items_Recipes", "Recipes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_Items_Recipes", "Recipes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeTaughtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_Items_Recipes", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_Items_Recipes", "Recipes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Items", "Reagents")]
        public EntityCollection<Reagent> Reagents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reagent>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Reagents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reagent>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Reagents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Recipes_Items", "Recipes")]
        public EntityCollection<Recipe> CraftedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recipe>("WoWModel.WoWDbModel.FK_Recipes_Items", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recipe>("WoWModel.WoWDbModel.FK_Recipes_Items", "Recipes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Race")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Race : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Race object.
        /// </summary>
        /// <param name="raceId">Initial value of the RaceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        public static Race CreateRace(global::System.Int32 raceId, global::System.String name, global::System.String icon)
        {
            Race race = new Race();
            race.RaceId = raceId;
            race.Name = name;
            race.Icon = icon;
            return race;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceId
        {
            get
            {
                return _RaceId;
            }
            set
            {
                if (_RaceId != value)
                {
                    OnRaceIdChanging(value);
                    ReportPropertyChanging("RaceId");
                    _RaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceId");
                    OnRaceIdChanged();
                }
            }
        }
        private global::System.Int32 _RaceId;
        partial void OnRaceIdChanging(global::System.Int32 value);
        partial void OnRaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Races", "Characters")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Races", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Races", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Reagent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reagent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reagent object.
        /// </summary>
        /// <param name="recipeId">Initial value of the RecipeId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static Reagent CreateReagent(global::System.Int32 recipeId, global::System.Int32 itemId)
        {
            Reagent reagent = new Reagent();
            reagent.RecipeId = recipeId;
            reagent.ItemId = itemId;
            return reagent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecipeId
        {
            get
            {
                return _RecipeId;
            }
            set
            {
                if (_RecipeId != value)
                {
                    OnRecipeIdChanging(value);
                    ReportPropertyChanging("RecipeId");
                    _RecipeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecipeId");
                    OnRecipeIdChanged();
                }
            }
        }
        private global::System.Int32 _RecipeId;
        partial void OnRecipeIdChanging(global::System.Int32 value);
        partial void OnRecipeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Items", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("WoWModel.WoWDbModel.FK_recipereagelnts_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Recipes", "Recipes")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Recipes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Recipes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Recipes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Realm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Realm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Realm object.
        /// </summary>
        /// <param name="realmId">Initial value of the RealmId property.</param>
        /// <param name="population">Initial value of the Population property.</param>
        /// <param name="queue">Initial value of the Queue property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="slug">Initial value of the Slug property.</param>
        /// <param name="battlegroup">Initial value of the Battlegroup property.</param>
        public static Realm CreateRealm(global::System.Int32 realmId, global::System.String population, global::System.Boolean queue, global::System.Boolean status, global::System.String name, global::System.String slug, global::System.String battlegroup)
        {
            Realm realm = new Realm();
            realm.RealmId = realmId;
            realm.Population = population;
            realm.Queue = queue;
            realm.Status = status;
            realm.Name = name;
            realm.Slug = slug;
            realm.Battlegroup = battlegroup;
            return realm;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealmId
        {
            get
            {
                return _RealmId;
            }
            set
            {
                if (_RealmId != value)
                {
                    OnRealmIdChanging(value);
                    ReportPropertyChanging("RealmId");
                    _RealmId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealmId");
                    OnRealmIdChanged();
                }
            }
        }
        private global::System.Int32 _RealmId;
        partial void OnRealmIdChanging(global::System.Int32 value);
        partial void OnRealmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private global::System.String _Population;
        partial void OnPopulationChanging(global::System.String value);
        partial void OnPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Queue
        {
            get
            {
                return _Queue;
            }
            set
            {
                OnQueueChanging(value);
                ReportPropertyChanging("Queue");
                _Queue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Queue");
                OnQueueChanged();
            }
        }
        private global::System.Boolean _Queue;
        partial void OnQueueChanging(global::System.Boolean value);
        partial void OnQueueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Battlegroup
        {
            get
            {
                return _Battlegroup;
            }
            set
            {
                OnBattlegroupChanging(value);
                ReportPropertyChanging("Battlegroup");
                _Battlegroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Battlegroup");
                OnBattlegroupChanged();
            }
        }
        private global::System.String _Battlegroup;
        partial void OnBattlegroupChanging(global::System.String value);
        partial void OnBattlegroupChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Auctions_Realms", "Auctions")]
        public EntityCollection<Auction> Auctions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auction>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Auctions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auction>("WoWModel.WoWDbModel.FK_Auctions_Realms", "Auctions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Characters_Realms", "Characters")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Realms", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.FK_Characters_Realms", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Recipe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recipe object.
        /// </summary>
        /// <param name="recipeId">Initial value of the RecipeId property.</param>
        /// <param name="tradeskillId">Initial value of the TradeskillId property.</param>
        public static Recipe CreateRecipe(global::System.Int32 recipeId, global::System.Int32 tradeskillId)
        {
            Recipe recipe = new Recipe();
            recipe.RecipeId = recipeId;
            recipe.TradeskillId = tradeskillId;
            return recipe;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecipeId
        {
            get
            {
                return _RecipeId;
            }
            set
            {
                if (_RecipeId != value)
                {
                    OnRecipeIdChanging(value);
                    ReportPropertyChanging("RecipeId");
                    _RecipeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecipeId");
                    OnRecipeIdChanged();
                }
            }
        }
        private global::System.Int32 _RecipeId;
        partial void OnRecipeIdChanging(global::System.Int32 value);
        partial void OnRecipeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TradeskillId
        {
            get
            {
                return _TradeskillId;
            }
            set
            {
                OnTradeskillIdChanging(value);
                ReportPropertyChanging("TradeskillId");
                _TradeskillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeskillId");
                OnTradeskillIdChanged();
            }
        }
        private global::System.Int32 _TradeskillId;
        partial void OnTradeskillIdChanging(global::System.Int32 value);
        partial void OnTradeskillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ServerwideAverage
        {
            get
            {
                return _ServerwideAverage;
            }
            set
            {
                OnServerwideAverageChanging(value);
                ReportPropertyChanging("ServerwideAverage");
                _ServerwideAverage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerwideAverage");
                OnServerwideAverageChanged();
            }
        }
        private Nullable<global::System.Int64> _ServerwideAverage;
        partial void OnServerwideAverageChanging(Nullable<global::System.Int64> value);
        partial void OnServerwideAverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CurrentPrice
        {
            get
            {
                return _CurrentPrice;
            }
            set
            {
                OnCurrentPriceChanging(value);
                ReportPropertyChanging("CurrentPrice");
                _CurrentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPrice");
                OnCurrentPriceChanged();
            }
        }
        private Nullable<global::System.Int64> _CurrentPrice;
        partial void OnCurrentPriceChanging(Nullable<global::System.Int64> value);
        partial void OnCurrentPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Items_Recipes", "Items")]
        public EntityCollection<Item> LearnedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("WoWModel.WoWDbModel.FK_Items_Recipes", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("WoWModel.WoWDbModel.FK_Items_Recipes", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Recipes_Items", "Items")]
        public Item CraftedItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Recipes_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Recipes_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> CraftedItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("WoWModel.WoWDbModel.FK_Recipes_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("WoWModel.WoWDbModel.FK_Recipes_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_recipereagelnts_Recipes", "Reagents")]
        public EntityCollection<Reagent> Reagents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reagent>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Reagents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reagent>("WoWModel.WoWDbModel.FK_recipereagelnts_Recipes", "Reagents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Recipes_Tradeskills", "Tradeskills")]
        public Tradeskill Tradeskill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tradeskill>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Tradeskills").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tradeskill>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Tradeskills").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tradeskill> TradeskillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tradeskill>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Tradeskills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tradeskill>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Tradeskills", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterRecipes", "Characters")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterRecipes", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterRecipes", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel.WoWDbModel", Name="Tradeskill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tradeskill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tradeskill object.
        /// </summary>
        /// <param name="tradeskillId">Initial value of the TradeskillId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="primary">Initial value of the Primary property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        public static Tradeskill CreateTradeskill(global::System.Int32 tradeskillId, global::System.String name, global::System.Boolean primary, global::System.String icon)
        {
            Tradeskill tradeskill = new Tradeskill();
            tradeskill.TradeskillId = tradeskillId;
            tradeskill.Name = name;
            tradeskill.Primary = primary;
            tradeskill.Icon = icon;
            return tradeskill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TradeskillId
        {
            get
            {
                return _TradeskillId;
            }
            set
            {
                if (_TradeskillId != value)
                {
                    OnTradeskillIdChanging(value);
                    ReportPropertyChanging("TradeskillId");
                    _TradeskillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TradeskillId");
                    OnTradeskillIdChanged();
                }
            }
        }
        private global::System.Int32 _TradeskillId;
        partial void OnTradeskillIdChanging(global::System.Int32 value);
        partial void OnTradeskillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Primary
        {
            get
            {
                return _Primary;
            }
            set
            {
                OnPrimaryChanging(value);
                ReportPropertyChanging("Primary");
                _Primary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Primary");
                OnPrimaryChanged();
            }
        }
        private global::System.Boolean _Primary;
        partial void OnPrimaryChanging(global::System.Boolean value);
        partial void OnPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "FK_Recipes_Tradeskills", "Recipes")]
        public EntityCollection<Recipe> Recipes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recipe>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recipe>("WoWModel.WoWDbModel.FK_Recipes_Tradeskills", "Recipes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel.WoWDbModel", "CharacterTradeskills", "Character")]
        public EntityCollection<Character> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterTradeskills", "Character");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("WoWModel.WoWDbModel.CharacterTradeskills", "Character", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
